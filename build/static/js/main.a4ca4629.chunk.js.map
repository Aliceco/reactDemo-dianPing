{"version":3,"sources":["utils/request.js","redux/middleware/api.js","utils/url.js","redux/modules/entities/orders/index.js","utils/creactReducer.js","redux/modules/entities/products/index.js","redux/modules/entities/shops/index.js","redux/modules/entities/keywords/index.js","redux/modules/ui/login/index.js","redux/modules/entities/comments/index.js","redux/modules/ui/search/index.js","redux/modules/ui/user/index.js","redux/modules/ui/productDetail/index.js","redux/modules/ui/home/index.js","components/ErrorToast/index.js","redux/modules/ui/app/index.js","utils/AsyncComponent.js","containers/PriveateRoute/index.js","containers/App/index.js","redux/modules/entities/index.js","redux/modules/ui/index.js","redux/modules/index.js","redux/store/index.js","index.js"],"names":["headers","Headers","Accept","Content-Type","handleResponse","url","res","status","console","log","json","error","concat","Promise","reject","msg","FETCH_DATA","fetchData","__webpack_exports__","store","next","action","callAPI","endpoint","schema","types","Error","Array","isArray","length","every","type","actionWith","data","finalAction","Object","objectSpread","_types","slicedToArray","requestType","successType","failureType","then","fetch","method","response","catch","err","normalizeData","_ref","id","name","kvObj","ids","forEach","item","push","defineProperty","getProductList","path","rowIndex","pageSize","getProductDetail","getShopById","getPopularKeywords","getRelatedKeywords","text","getRelatedShops","keywordId","getOrders","TO_PAY_TYPE","AVAILABLE_TYPE","REFUND_TYPE","DELETE_ORDERS","ADD_COMMENT","actions","deleteOrder","orderId","addComment","commentId","normalReducer","creactReducer","reducer","state","arguments","undefined","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_action$orderId","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","map","_toPropertyKey","getOrderById","entities","orders","createReducer","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","getProductDetailCache","getProductById","_utils_creactReducer__WEBPACK_IMPORTED_MODULE_0__","product","products","detail","purchaseNotes","getShopByIdCache","shops","getKeywordsById","keywords","initialState","userName","localStorage","getItem","password","isFetching","login","dispatch","getState","_getState$ui$login","ui","loginRequest","resolve","setTimeout","loginSuccess","setItem","loginFailure","logout","removeItem","setUserName","setPassword","getUserName","getPassword","isLogin","comment","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","inputText","popularKeywords","relatedKeywords","historyKeywords","searchedShopsByKeywords","loadPopularKeywords","search","fetchPopularKeywords","loadRelatedKeywords","fetchRelatedKeywords","loadRelatedShops","searchedShopsByKeyword","fetchRelatedShops","setInputText","clearInputText","addHistoryKeywords","clearHistoryKeywords","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","shopSchema","keywordsSchema","_ref3","relatedKeywordsByText","searchedShops","combineReducers","filter","F_exerciseCode_js_react_react_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","trim","getInputText","getHistoryKeywords","getSearchedShops","getCurrentKeyword","toPayIds","availableIds","refundIds","currentTab","currentOrder","isDeleting","isCommenting","stars","loadOrders","user","fetchOrders","setCurrentTab","index","removeOrder","delOrderRequest","delOrderSucc","orderActions","showDeleteDialog","hideDeleteDialog","showCommentArea","hideCommentArea","setComment","setStars","submitComment","postCommentRequest","_getState$ui$user$cur","commentObj","Date","content","postCommentSuccess","commentAction","orderSchema","removeOrderId","key","orderTypes","getCurrentTab","getDeletingOrderId","getCommentingOrderId","getCurrentOrderComment","getCurrentOrderStars","relatedShop","loadProductDetail","fetchProductDetailSuccess","fetchProductDetail","loadShopById","fetchShopSuccess","fetchShopById","productSchema","_ref2","getProduct","getRelatedShop","productId","shopId","nearestShop","params","likes","pageCount","discounts","loadLikes","home","fetchLikes","loadDiscounts","fetchDiscounts","getLikes","getPageCountOfLikes","getDiscounts","ErrorToast","this","props","react_default","a","createElement","className","_this","timer","clearError","clearTimeout","Component","initalState","getError","app","asyncComponent","importComponent","_Component","AsyncComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","component","inherits","createClass","value","_this2","mod","setState","default","C","PriveateRoute","_this$props","rest","objectWithoutProperties","react_router","assign","render","to","pathname","from","location","connect","Home","all","e","bind","ProductDetail","Search","SearchResult","Login","User","Purchase","App","appActions","react_router_dom","src_containers_PriveateRoute","src_components_ErrorToast","bindActionCreators","rootEntitiesReducer","comments","rootUiReducer","purchase","rootReducer","createStore","applyMiddleware","thunk","api","ReactDOM","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.a4ca4629.chunk.js","sourcesContent":["const headers = new Headers({\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n})\r\nfunction get(url) {\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(response => {\r\n        return handleResponse(url, response)\r\n    }).catch(err => {\r\n        console.error(`request failed. url = ${url}. msg= ${err}`)\r\n        return Promise.reject({error: {msg: 'request failed'}})\r\n    })\r\n}\r\n\r\nfunction post(url, data) {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: headers\r\n    }).then(response => {\r\n        return handleResponse(url, response)\r\n    }).catch(err => {\r\n        console.error(`request failed. url = ${url}. msg= ${err}`)\r\n        return Promise.reject({error: {msg: 'request failed'}})\r\n    })\r\n}\r\n\r\nfunction handleResponse(url, res) {\r\n    if (res.status === 200) {\r\n        console.log(res)\r\n        // res.json().then(function (jsonObject) {\r\n        //     console.log(jsonObject)\r\n        //     return jsonObject\r\n        // })\r\n        return res.json()\r\n    } else {\r\n        console.error(`request failed. url = ${url}`)\r\n        return Promise.reject({error: {msg: 'request failed due to server error'}})\r\n    }\r\n}\r\n\r\nexport {get, post}\r\n","import {get} from '../../utils/request'\r\n\r\n// 经过中间件处理的action所具有的标识\r\nexport const FETCH_DATA = 'FETCH DATA'\r\n\r\nexport default store => next => action => {\r\n    const callAPI = action[FETCH_DATA]\r\n\r\n    console.log(callAPI)\r\n\r\n    if (typeof callAPI === 'undefined') {\r\n        return next(action)\r\n    }\r\n    const {endpoint, schema, types} = callAPI\r\n    if (typeof endpoint !== 'string') {\r\n        throw new Error('endpoint必须为字符串类型的URL')\r\n    }\r\n    if (!schema) {\r\n        throw new Error('必须指定领域实体的schema')\r\n    }\r\n    if (!Array.isArray(types) && types.length !== 3) {\r\n        throw new Error('需要指定一个包含3个action type的数组')\r\n    }\r\n    if (!types.every(type => typeof type === 'string')) {\r\n        throw new Error('action type 必须为字符串类型')\r\n    }\r\n\r\n    const actionWith = data => {\r\n        const finalAction = {...action, ...data}\r\n        delete finalAction[FETCH_DATA]\r\n        return finalAction\r\n    }\r\n    const [requestType, successType, failureType] = types\r\n\r\n    next(actionWith({type: requestType}))\r\n\r\n    return fetchData(endpoint, schema).then(res => next(actionWith({\r\n        type: successType,\r\n        res\r\n    })),\r\n        error => next(actionWith({\r\n            type: failureType,\r\n            error: error.msg || '获取数据失败'\r\n        }))\r\n    )\r\n}\r\n\r\n// 执行网络请求\r\nconst fetchData = (endpoint, schema) => {\r\n    return get(endpoint).then(res => {\r\n        // console.log(res)\r\n        return normalizeData(res, schema)\r\n    })\r\n}\r\n// 根据schema,将获取的数据扁平化处理\r\nconst normalizeData = (res, schema) => {\r\n    const {id, name} = schema\r\n    let kvObj = {}\r\n    let ids = []\r\n    if (Array.isArray(res)) {\r\n        res.forEach(item => {\r\n            kvObj[item[id]] = item\r\n            ids.push(item[id])\r\n        })\r\n    } else{\r\n        kvObj[res[id]] = res\r\n        ids.push(res[id])\r\n    }\r\n    return  {\r\n        [name]: kvObj,\r\n        ids\r\n    }\r\n}\r\n","export default {\r\n    getProductList: (path, rowIndex, pageSize) => `/mock/products/${path}.json?rowIndex=${rowIndex}&pageSize=${pageSize}`,\r\n    getProductDetail: (id) => `/mock/product_detail/${id}.json`,\r\n    getShopById: (id) => `/mock/shops/${id}.json`,\r\n    getPopularKeywords: () => `/mock/keywords/popular.json`,\r\n    getRelatedKeywords: (text) => `/mock/keywords/related.json?keyword=${text}`,\r\n    getRelatedShops: (keywordId) => `/mock/shops/related.json?keyword=${keywordId}`,\r\n    getOrders: () => `/mock/orders/orders.json`\r\n}\r\n","import creactReducer from '../../../../utils/creactReducer'\r\n\r\n\r\nexport const schema = {\r\n    id: 'id',\r\n    name: 'orders'\r\n}\r\n\r\nexport const USED_TYPE = 1; // 已消费\r\nexport const TO_PAY_TYPE = 2; //待付款\r\nexport const AVAILABLE_TYPE = 3; //可使用\r\nexport const REFUND_TYPE = 4; //退款\r\n\r\nexport const types = {\r\n    // 删除订单\r\n    DELETE_ORDERS: 'ORDERS/DELETE_ORDERS',\r\n    // 新增评价\r\n    ADD_COMMENT: 'ORDERS/ADD_COMMENT'\r\n}\r\n\r\nexport const actions = {\r\n    // 删除订单\r\n    deleteOrder: (orderId) => ({\r\n        type: types.DELETE_ORDERS,\r\n        orderId\r\n    }),\r\n    // 新增评价\r\n    addComment: (orderId, commentId) => ({\r\n        type: types.ADD_COMMENT,\r\n        orderId,\r\n        commentId\r\n    })\r\n}\r\n\r\n\r\n\r\nconst normalReducer = creactReducer(schema.name)\r\nconst reducer = (state = {}, action) => {\r\n    if (action.type === types.ADD_COMMENT) {\r\n        return {\r\n            ...state,\r\n            [action.orderId]: {\r\n                ...state[action.orderId],\r\n                commentId: action.commentId\r\n            }\r\n        }\r\n    } else if (action.type === types.DELETE_ORDERS) {\r\n        const { [action.orderId] : deleteOrder, ...restOrders } = state\r\n        return restOrders\r\n    } else {\r\n        return normalReducer(state, action)\r\n    }\r\n}\r\n\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getOrderById = (state, id) => {\r\n    return state.entities.orders[id]\r\n}\r\n","const createReducer = (name) => {\r\n    return (state = {}, action) => {\r\n        if (action.res && action.res[name]) {\r\n            return {...state, ...action.res[name]}\r\n        }\r\n        return state\r\n    }\r\n}\r\n\r\nexport default createReducer\r\n","import creactReducer from '../../../../utils/creactReducer'\r\nexport const schema = {\r\n    id: 'id',\r\n    name: 'products'\r\n}\r\n\r\nconst reducer = creactReducer(schema.name)\r\n\r\nexport default reducer\r\n\r\n\r\n// selectors\r\nexport const getProductDetailCache = (state, id) => {\r\n    const product = state.entities.products[id]\r\n    return product && product.detail && product.purchaseNotes  ?  product : null\r\n}\r\n\r\nexport const getProductById = (state, id) => {\r\n    return state.entities.products[id]\r\n}\r\n","import creactReducer from '../../../../utils/creactReducer'\r\nexport const schema = {\r\n    name: 'shops',\r\n    id: 'id'\r\n}\r\n\r\nconst reducer = creactReducer(schema.name)\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getShopByIdCache = (state, id) => {\r\n    const shop = state.entities.shops[id]\r\n    return shop\r\n}\r\n","import creactReducer from '../../../../utils/creactReducer'\r\nexport const schema = {\r\n    name: 'keywords',\r\n    id: 'id'\r\n}\r\n\r\nconst reducer = creactReducer(schema.name)\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getKeywordsById = (state, id) => {\r\n    return state.entities.keywords[id]\r\n}\r\n","const initialState = {\r\n    userName: localStorage.getItem('userName') || '',\r\n    password: '',\r\n    isFetching: false,\r\n    status: localStorage.getItem('login') || false, // 登录状态\r\n}\r\n\r\nexport const types = {\r\n    LOGIN_REQUEST: 'LOGIN/LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN/LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN/LOGIN_FAILURE',\r\n    LOGOUT: 'LOGIN/LOGOUT',\r\n    SET_USERNAME: 'LOGIN/SET_USERNAME',\r\n    SET_PASSWORD: 'LOGIN/SET_PASSWORD'\r\n}\r\n\r\n\r\nexport const actions = {\r\n    // 异步action，执行登录\r\n    login: () => {\r\n        return (dispatch, getState) => {\r\n            const {userName, password} = getState().ui.login\r\n            if (!(userName && userName.length > 0 && password && password.length > 0)) {\r\n                return dispatch(loginFailure('用户名和密码不能为空'))\r\n            }\r\n            dispatch(loginRequest())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    dispatch(loginSuccess())\r\n                    localStorage.setItem('userName', userName)\r\n                    localStorage.setItem('login', true)\r\n                    resolve()\r\n                }, 1000)\r\n            })\r\n        }\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('userName')\r\n        localStorage.removeItem('login')\r\n        return {\r\n            type: types.LOGOUT\r\n        }\r\n    },\r\n    setUserName: (userName) => ({\r\n        type: types.SET_USERNAME,\r\n        userName\r\n    }),\r\n    setPassword: (password) => ({\r\n        type: types.SET_PASSWORD,\r\n        password\r\n    })\r\n}\r\n\r\nconst loginFailure = (error) => ({\r\n    type: types.LOGIN_FAILURE,\r\n    error\r\n})\r\nconst loginRequest = () => ({\r\n    type: types.LOGIN_REQUEST\r\n})\r\nconst loginSuccess = () => ({\r\n    type: types.LOGIN_SUCCESS\r\n})\r\n\r\n\r\n// reducer\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.LOGIN_SUCCESS:\r\n            return {...state, isFetching: false, status: true}\r\n        case types.LOGIN_FAILURE:\r\n            return {...state, isFetching: false}\r\n        case types.LOGOUT:\r\n            return {...state, status: false, userName: '', password: ''}\r\n        case types.SET_USERNAME:\r\n            return {...state, userName: action.userName}\r\n        case types.SET_PASSWORD:\r\n            return {...state, password: action.password}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer\r\n\r\n// selectors\r\n\r\nexport const getUserName = (state) => state.ui.login.userName\r\nexport const getPassword = (state) => state.ui.login.password\r\n\r\nexport const isLogin = (state) => state.ui.login.status\r\n","import creactReducer from '../../../../utils/creactReducer'\r\n\r\n\r\nexport const schema = {\r\n    id: 'id',\r\n    name: 'comments'\r\n}\r\n\r\nexport const types = {\r\n    ADD_COMMENT: 'COMMENT/ADD_COMMENT'\r\n}\r\n\r\nexport const actions = {\r\n    addComment: (comment) => ({\r\n        type: types.ADD_COMMENT,\r\n        comment\r\n    })\r\n}\r\n\r\nconst normalReducer = creactReducer(schema.name)\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if (action.type === types.ADD_COMMENT) {\r\n        return {...state, [action.comment.id]: action.comment}\r\n    } else {\r\n        return normalReducer(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import url from '../../../../utils/url'\r\nimport {FETCH_DATA} from \"../../../middleware/api\";\r\nimport {schema as keywordsSchema, getKeywordsById} from \"../../entities/keywords\";\r\nimport {schema as shopSchema, getShopByIdCache} from \"../../entities/shops\";\r\n\r\nimport {combineReducers} from 'redux'\r\nexport const types = {\r\n    // 获取热门关键词\r\n    FETCH_POPULAR_KEYWORDS_REQUEST: 'SEARCH/FETCH_POPULAR_KEYWORDS_REQUEST',\r\n    FETCH_POPULAR_KEYWORDS_SUCCESS: 'SEARCH/FETCH_POPULAR_KEYWORDS_SUCCESS',\r\n    FETCH_POPULAR_KEYWORDS_FAILURE: 'SEARCH/FETCH_POPULAR_KEYWORDS_FAILURE',\r\n    // 根据输入的文本获取相关关键词\r\n    FETCH_RELATED_KEYWORDS_REQUEST: 'SEARCH/FETCH_RELATED_KEYWORDS_REQUEST',\r\n    FETCH_RELATED_KEYWORDS_SUCCESS: 'SEARCH/FETCH_RELATED_KEYWORDS_SUCCESS',\r\n    FETCH_RELATED_KEYWORDS_FAILURE: 'SEARCH/FETCH_RELATED_KEYWORDS_FAILURE',\r\n    // 设置当前输入\r\n    SET_INPUT_TEXT: 'SEARCH/SET_INPUT_TEXT',\r\n    CLEAR_INPUT_TEXT: 'SEARCH/CLEAR_INPUT_TEXT',\r\n    // 历史查询记录\r\n    ADD_HISTORY_KEYWORDS: 'SEARCH/ADD_HISTORY_KEYWORDS',\r\n    CLEAR_HISTORY_KEYWORDS: 'SEARCH/CLEAR_HISTORY_KEYWORDS',\r\n    // 查询\r\n    FETCH_SHOPS_REQUEST: 'SEARCH/FETCH_SHOPS_REQUEST',\r\n    FETCH_SHOPS_SUCCESS: 'SEARCH/FETCH_SHOPS_SUCCESS',\r\n    FETCH_SHOPS_FAILURE: 'SEARCH/FETCH_SHOPS_FAILURE',\r\n}\r\n\r\nconst initialState = {\r\n    inputText: '',\r\n    popularKeywords: {\r\n        isFetching: false,\r\n        ids: []\r\n    },\r\n    /***\r\n     * relatedKeywords\r\n     * {\r\n     *     '火锅': {\r\n     *         isFetching: false,\r\n     *         ids: []\r\n     *     }\r\n     * }\r\n     */\r\n    relatedKeywords: {\r\n\r\n    },\r\n    historyKeywords: [], // 保存关键词id\r\n    /***\r\n     * searchedShopsByKeywords\r\n     * {\r\n     *     'keywordId': {\r\n     *         isFetching: false,\r\n     *         ids: []\r\n     *     }\r\n     * }\r\n     */\r\n    searchedShopsByKeywords: {\r\n    }\r\n\r\n};\r\n\r\nexport const actions = {\r\n    // 获取热门关键词\r\n    loadPopularKeywords: () => {\r\n        return(dispatch, getState) => {\r\n            const { ids } = getState().ui.search.popularKeywords\r\n            if (ids.length > 0) {\r\n                return null\r\n            }\r\n            const endpoint = url.getPopularKeywords()\r\n            return dispatch(fetchPopularKeywords(endpoint))\r\n        }\r\n    },\r\n    // 根据输入获取相关关键词\r\n    loadRelatedKeywords: (text) => {\r\n        return (dispatch, getState) => {\r\n            const {relatedKeywords} = getState().ui.search\r\n            if (relatedKeywords[text]) {\r\n                return null\r\n            }\r\n            const endpoint = url.getRelatedKeywords(text)\r\n            return dispatch(fetchRelatedKeywords(text, endpoint))\r\n        }\r\n    },\r\n    // 获取查询到的店铺列表\r\n    loadRelatedShops: keywordId => {\r\n        return (dispatch, getState) => {\r\n            const { searchedShopsByKeyword } = getState().ui.search\r\n            if (searchedShopsByKeyword[keywordId]) {\r\n                return null\r\n            }\r\n            const endpoint = url.getRelatedShops(keywordId)\r\n            return dispatch(fetchRelatedShops(endpoint, keywordId))\r\n        }\r\n    },\r\n    // 搜索框输入文本相关action\r\n    setInputText: (text) => ({\r\n        type: types.SET_INPUT_TEXT,\r\n        text\r\n    }),\r\n    clearInputText: () => ({\r\n        type: types.CLEAR_INPUT_TEXT\r\n    }),\r\n    // 历史查询记录相关action\r\n    addHistoryKeywords: (keywordId) => ({\r\n        type: types.ADD_HISTORY_KEYWORDS,\r\n        text: keywordId\r\n    }),\r\n    clearHistoryKeywords: () => ({\r\n        type: types.CLEAR_HISTORY_KEYWORDS\r\n    })\r\n}\r\n// 搜索店铺结果页面 网络请求\r\nconst fetchRelatedShops = (endpoint, text) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_SHOPS_REQUEST,\r\n            types.FETCH_SHOPS_SUCCESS,\r\n            types.FETCH_SHOPS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema: shopSchema\r\n    },\r\n    text\r\n})\r\n\r\nconst fetchPopularKeywords = (endpoint) => ({\r\n    [FETCH_DATA]: {\r\n       types: [\r\n           types.FETCH_POPULAR_KEYWORDS_REQUEST,\r\n           types.FETCH_POPULAR_KEYWORDS_SUCCESS,\r\n           types.FETCH_POPULAR_KEYWORDS_FAILURE\r\n       ],\r\n        endpoint,\r\n        schema: keywordsSchema\r\n    }\r\n\r\n})\r\n\r\nconst fetchRelatedKeywords = (text, endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_RELATED_KEYWORDS_REQUEST,\r\n            types.FETCH_RELATED_KEYWORDS_SUCCESS,\r\n            types.FETCH_RELATED_KEYWORDS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema: keywordsSchema\r\n    },\r\n    text\r\n})\r\n\r\n\r\n// reduers\r\nconst popularKeywords = (state = initialState.popularKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_POPULAR_KEYWORDS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_POPULAR_KEYWORDS_SUCCESS:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.res.ids)}\r\n        case types.FETCH_POPULAR_KEYWORDS_FAILURE:\r\n            return {...state, isFetching: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst relatedKeywords = (state = initialState.relatedKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {\r\n                ...state,\r\n                [action.text]: relatedKeywordsByText(state[action.text], action)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst relatedKeywordsByText = (state = {isFetching: false, ids: []}, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.res.ids)}\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {...state, isFetching: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst inputText = (state = initialState.inputText, action) => {\r\n    switch (action.type) {\r\n        case types.SET_INPUT_TEXT:\r\n            return action.text\r\n        case types.CLEAR_INPUT_TEXT:\r\n            return ''\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst historyKeywords = (state = initialState.historyKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_HISTORY_KEYWORDS:\r\n            const data = state.filter(item => {\r\n                if (item !== action.text) {\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            return [action.text, ...data]\r\n        case types.CLEAR_HISTORY_KEYWORDS:\r\n            return []\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// 搜索店铺\r\nconst searchedShopsByKeyword = (state = initialState.searchedShopsByKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SHOPS_REQUEST:\r\n        case types.FETCH_SHOPS_SUCCESS:\r\n        case types.FETCH_SHOPS_FAILURE:\r\n            return {\r\n                ...state,\r\n                [action.text]: searchedShops(state[action.text], action)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst searchedShops = (state = {isFetching: false, ids: []}, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SHOPS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_SHOPS_SUCCESS:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.res.ids)}\r\n        case types.FETCH_SHOPS_FAILURE:\r\n            return {...state, isFetching: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst reducer = combineReducers({\r\n    popularKeywords,\r\n    relatedKeywords,\r\n    inputText,\r\n    historyKeywords,\r\n    searchedShopsByKeyword\r\n})\r\n\r\nexport default reducer\r\n\r\n\r\n// selectors\r\nexport const getPopularKeywords = state => {\r\n    return state.ui.search.popularKeywords.ids.map(id => {\r\n        return getKeywordsById(state, id)\r\n    })\r\n}\r\n\r\nexport const getRelatedKeywords = state => {\r\n    const text = state.ui.search.inputText\r\n    if (!text || text.trim().length === 0) {\r\n        return []\r\n    }\r\n    const relatedKeywords = state.ui.search.relatedKeywords[text]\r\n    if (!relatedKeywords) {\r\n        return []\r\n    }\r\n    return relatedKeywords.ids.map(id => {\r\n        return getKeywordsById(state, id)\r\n    })\r\n}\r\n\r\nexport const getInputText = state => {\r\n    return state.ui.search.inputText\r\n}\r\n\r\nexport const getHistoryKeywords = state => {\r\n    return state.ui.search.historyKeywords.map(id => {\r\n        return getKeywordsById(state, id)\r\n    })\r\n}\r\n// 查询店铺列表\r\nexport const getSearchedShops = (state) => {\r\n    const keywordId = state.ui.search.historyKeywords[0]\r\n    if (!keywordId) {\r\n        return []\r\n    }\r\n    const shops = state.ui.search.searchedShopsByKeyword[keywordId]\r\n    return shops.ids.map(id => {\r\n        return getShopByIdCache(state, id)\r\n    })\r\n}\r\n// 获取当前关键词\r\nexport const getCurrentKeyword = (state) => {\r\n    const keywordId = state.ui.search.historyKeywords[0]\r\n    if (!keywordId) {\r\n        return ''\r\n    }\r\n    return getKeywordsById(state, keywordId).keywords\r\n}\r\n","import url from '../../../../utils/url'\r\nimport {FETCH_DATA} from \"../../../middleware/api\";\r\nimport {schema as orderSchema, USED_TYPE, TO_PAY_TYPE, AVAILABLE_TYPE, REFUND_TYPE, getOrderById,\r\n    actions as orderActions,\r\n    types as orderTypes\r\n} from \"../../entities/orders\";\r\n\r\nimport {actions as commentAction} from \"../../entities/comments\";\r\n\r\nimport {combineReducers} from 'redux'\r\n\r\nconst initialState = {\r\n    orders: {\r\n        isFetching: false,\r\n        ids: [],\r\n        toPayIds: [], // 待付款的订单id\r\n        availableIds: [], // 可使用的订单id\r\n        refundIds: [] // 退款订单id\r\n    },\r\n    currentTab: 0,\r\n    currentOrder: {\r\n        id: null,\r\n        isDeleting: false,\r\n        isCommenting: false,\r\n        comment: '',\r\n        stars: 0\r\n    }\r\n}\r\n\r\nexport const types = {\r\n    // 获取订单列表\r\n    FETCH_ORDERS_REQUEST: 'USER/FETCH_ORDERS_REQUEST',\r\n    FETCH_ORDERS_SUCCESS: 'USER/FETCH_ORDERS_SUCCESS',\r\n    FETCH_ORDERS_FAILURE: 'USER/FETCH_ORDERS_FAILURE',\r\n    // 设置当选选中的tab\r\n    SET_CURRENT_TAB: 'USER/SET_CURRENT_TAB',\r\n    // 删除订单\r\n    DELETE_ORDERS_REQUEST: 'USER/DELETE_ORDERS_REQUEST',\r\n    DELETE_ORDERS_SUCCESS: 'USER/DELETE_ORDERS_SUCCESS',\r\n    DELETE_ORDERS_FAILURE: 'USER/DELETE_ORDERS_FAILURE',\r\n    // 删除确认对话框\r\n    SHOW_DELETE_DIALOG: 'USER/SHOW_DELETE_DIALOG',\r\n    HIDE_DELETE_DIALOG: 'USER/HIDE_DELETE_DIALOG',\r\n    // 评价订单编辑\r\n    SHOW_COMMENT_AREA: 'USER/SHOW_COMMENT_AREA',\r\n    HIDE_COMMENT_AREA: 'USER/HIDE_COMMENT_AREA',\r\n    // 编辑评价内容\r\n    SET_COMMENT: 'USER/SET_COMMENT',\r\n    // 打分\r\n    SET_STARS: 'USER/SET_STARS',\r\n    // 提交评价\r\n    POST_COMMENT_REQUEST: 'USER/POST_COMMENT_REQUEST',\r\n    POST_COMMENT_SUCCESS: 'USER/POST_COMMENT_SUCCESS',\r\n    POST_COMMENT_FAILURE: 'USER/POST_COMMENT_FAILURE'\r\n}\r\n\r\nexport const actions = {\r\n    // 获取订单列表\r\n    loadOrders: () => {\r\n        return (dispatch, getState) => {\r\n            const { ids } = getState().ui.user.orders\r\n            if (ids.length > 0) {\r\n                return null\r\n            }\r\n            const endpoint = url.getOrders()\r\n            console.log(endpoint)\r\n            return dispatch(fetchOrders(endpoint))\r\n        }\r\n    },\r\n    // 切换tab\r\n    setCurrentTab: index => ({\r\n        type: types.SET_CURRENT_TAB,\r\n        index\r\n    }),\r\n    // 删除订单\r\n    removeOrder: () => {\r\n        return (dispatch, getState) => {\r\n            const {id} = getState().ui.user.currentOrder\r\n            if (id) {\r\n                dispatch(delOrderRequest())\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        dispatch(delOrderSucc(id))\r\n                        dispatch(orderActions.deleteOrder())\r\n                        resolve()\r\n                    }, 500)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    // 显示删除对话框\r\n    showDeleteDialog: orderId => ({\r\n        type: types.SHOW_DELETE_DIALOG,\r\n        orderId\r\n    }),\r\n    // 隐藏删除对话框\r\n    hideDeleteDialog: () => ({\r\n        type: types.HIDE_DELETE_DIALOG\r\n    }),\r\n    // 显示订单评价编辑框\r\n    showCommentArea: orderId => ({\r\n        type: types.SHOW_COMMENT_AREA,\r\n        orderId\r\n    }),\r\n    // 隐藏订单评价编辑框\r\n    hideCommentArea: () => ({\r\n        type: types.HIDE_COMMENT_AREA\r\n    }),\r\n    // 设置评价信息\r\n    setComment: comment => ({\r\n        type: types.SET_COMMENT,\r\n        comment\r\n    }),\r\n    // 设置评价等级\r\n    setStars: stars => ({\r\n        type: types.SET_STARS,\r\n        stars\r\n    }),\r\n    // 提交评价\r\n    submitComment: () => {\r\n        return (dispatch, getState) => {\r\n            dispatch(postCommentRequest())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    const {currentOrder: {id, stars, comment}} = getState().ui.user\r\n                    const commentObj = {\r\n                        id: + new Date(),\r\n                        stars: stars,\r\n                        content: comment\r\n                    }\r\n                    dispatch(postCommentSuccess())\r\n                    dispatch(commentAction.addComment(commentObj))\r\n                    dispatch(orderActions.addComment(id, commentObj.id))\r\n                    resolve()\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst postCommentRequest = () => ({\r\n    type: types.POST_COMMENT_REQUEST\r\n})\r\nconst postCommentSuccess = () => ({\r\n    type: types.POST_COMMENT_SUCCESS\r\n})\r\n\r\nconst delOrderRequest = () => ({\r\n    type: types.DELETE_ORDERS_REQUEST\r\n})\r\n\r\nconst delOrderSucc = (orderId) => ({\r\n    type: types.DELETE_ORDERS_SUCCESS,\r\n    orderId\r\n})\r\n\r\nconst fetchOrders = (endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_ORDERS_REQUEST,\r\n            types.FETCH_ORDERS_SUCCESS,\r\n            types.FETCH_ORDERS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema: orderSchema\r\n    }\r\n})\r\n\r\n// reducers\r\nconst orders = (state = initialState.orders, action) => {\r\n    console.log('----orders----')\r\n    console.log(action)\r\n    console.log('----orders----')\r\n    switch (action.type) {\r\n        case types.FETCH_ORDERS_REQUEST:\r\n            return {...state, isFetching: true};\r\n        case types.FETCH_ORDERS_SUCCESS:\r\n            const toPayIds = action.res.ids.filter(\r\n                id => action.res.orders[id].type === TO_PAY_TYPE\r\n            );\r\n            const availableIds = action.res.ids.filter(\r\n                id => action.res.orders[id].type === AVAILABLE_TYPE\r\n            );\r\n            const refundIds = action.res.ids.filter(\r\n                id => action.res.orders[id].type === REFUND_TYPE\r\n            );\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                ids: state.ids.concat(action.res.ids),\r\n                toPayIds: state.toPayIds.concat(toPayIds),\r\n                availableIds: state.availableIds.concat(availableIds),\r\n                refundIds: state.refundIds.concat(refundIds)\r\n            };\r\n        case orderTypes.DELETE_ORDERS:\r\n        case types.DELETE_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ids: removeOrderId(state, 'ids', action.orderId),\r\n                toPayIds: removeOrderId(state, 'toPayIds', action.orderId),\r\n                availableIds: removeOrderId(state, 'availableIds', action.orderId),\r\n                refundIds: removeOrderId(state, 'refundIds', action.orderId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst removeOrderId = (state, key, orderId) => {\r\n    return state[key].filter(id => {\r\n        return id !== orderId\r\n    })\r\n}\r\n\r\nconst currentTab = (state = initialState.currentTab, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CURRENT_TAB:\r\n            return action.index\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst currentOrder = (state = initialState.currentOrder, action ) => {\r\n    switch (action.type) {\r\n        case types.SHOW_DELETE_DIALOG:\r\n            return {...state, id: action.orderId, isDeleting: true}\r\n        case types.SHOW_COMMENT_AREA:\r\n            return {\r\n                ...state,\r\n                id: action.orderId,\r\n                isCommenting: true\r\n            }\r\n        case types.HIDE_COMMENT_AREA:\r\n\r\n        case types.POST_COMMENT_SUCCESS:\r\n        case types.POST_COMMENT_FAILURE:\r\n\r\n        case types.HIDE_DELETE_DIALOG:\r\n        case types.DELETE_ORDERS_SUCCESS:\r\n        case types.DELETE_ORDERS_FAILURE:\r\n            return initialState.currentOrder\r\n        case types.SET_COMMENT:\r\n            return {...state, comment: action.comment}\r\n        case types.SET_STARS:\r\n            return {...state, stars: action.stars}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    orders,\r\n    currentTab,\r\n    currentOrder\r\n})\r\n\r\nexport default reducer\r\n\r\n\r\n// selectors\r\nexport const getCurrentTab = state => state.ui.user.currentTab\r\n\r\nexport const getOrders = state => {\r\n    const arr = [\"ids\", \"toPayIds\", \"availableIds\", \"refundIds\"];\r\n    const key = arr[state.ui.user.currentTab];\r\n    return state.ui.user.orders[key].map(id => {\r\n        return getOrderById(state, id)\r\n    })\r\n}\r\n\r\n// 获取正在删除订单的id\r\nexport const getDeletingOrderId = (state) => {\r\n    return state.ui.user.currentOrder && state.ui.user.currentOrder.isDeleting ? state.ui.user.currentOrder.id : null\r\n}\r\n\r\n\r\n// 获取正在评价订单的id\r\nexport const getCommentingOrderId = (state) => {\r\n    return state.ui.user.currentOrder && state.ui.user.currentOrder.isCommenting ? state.ui.user.currentOrder.id : null\r\n}\r\n\r\n// 获取评论信息\r\nexport const getCurrentOrderComment = state => {\r\n    return state.ui.user.currentOrder ? state.ui.user.currentOrder.comment : ''\r\n}\r\n\r\n// 获取订单打分\r\nexport const getCurrentOrderStars = state => {\r\n    return state.ui.user.currentOrder ? state.ui.user.currentOrder.stars : 0\r\n}\r\n","import url from '../../../../utils/url'\r\n\r\nimport {FETCH_DATA} from \"../../../middleware/api\";\r\n\r\nimport {schema as shopSchema, getShopByIdCache} from '../../entities/shops'\r\nimport {schema as productSchema, getProductDetailCache, getProductById} from  '../../entities/products'\r\n\r\nimport {combineReducers} from 'redux'\r\n\r\nexport const types = { // 请求操作状态\r\n    // 获取产品详情\r\n    FETCH_PRODUCT_DETAIL_REQUEST: 'PRODUCT/FETCH_PRODUCT_DETAIL_REQUEST',\r\n    FETCH_PRODUCT_DETAIL_SUCCESS: 'PRODUCT/FETCH_PRODUCT_DETAIL_SUCCESS',\r\n    FETCH_PRODUCT_DETAIL_FAILURE: 'PRODUCT/FETCH_PRODUCT_DETAIL_FAILURE',\r\n    // 获取关联店铺信息\r\n    FETCH_SHOP_REQUEST: 'PRODUCT/FETCH_SHOP_REQUEST',\r\n    FETCH_SHOP_SUCCESS: 'PRODUCT/FETCH_SHOP_SUCCESS',\r\n    FETCH_SHOP_FAILURE: 'PRODUCT/FETCH_SHOP_FAILURE',\r\n}\r\n\r\nconst initialState = { // 初始化数据\r\n    product: {\r\n        isFetching: false,\r\n        id: null\r\n    },\r\n    relatedShop: {\r\n        isFetching: false,\r\n        id: null\r\n    }\r\n}\r\n\r\n// 商品详情reducer\r\nconst product = (state = initialState.product, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_DETAIL_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_PRODUCT_DETAIL_SUCCESS:\r\n            return {...state, id: action.id, isFetching: false}\r\n        case types.FETCH_PRODUCT_DETAIL_FAILURE:\r\n            return {...state, isFetching: false, id: null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// 店铺的reducer\r\nconst relatedShop = (state = initialState.relatedShop, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SHOP_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_SHOP_SUCCESS:\r\n            return {...state, id: action.id, isFetching: false}\r\n        case types.FETCH_SHOP_FAILURE:\r\n            return {...state, isFetching: false, id: null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    product,\r\n    relatedShop\r\n})\r\nexport default reducer\r\n\r\n// 动作\r\nexport const actions = {\r\n    // 获取商品详情\r\n    loadProductDetail: id => {\r\n        return (dispatch, getState) => {\r\n            // 数据缓存\r\n            let state = getState()\r\n            const product = getProductDetailCache(state, id)\r\n            if (product) {\r\n                return dispatch(fetchProductDetailSuccess(id))\r\n            }\r\n            // 发送网络请求\r\n            const endpoint = url.getProductDetail(id) // 得到URL\r\n            console.log(endpoint)\r\n            // console.log(fetchProductDetail(endpoint, id))\r\n            return dispatch(fetchProductDetail(endpoint, id)) // 发送异步actions\r\n        }\r\n    },\r\n    // 获取店铺信息\r\n    loadShopById: id => {\r\n        return (dispatch, getState) => {\r\n            let state = getState()\r\n            // 数据缓存\r\n            const shop = getShopByIdCache(state, id)\r\n            if (shop) {\r\n                return dispatch(fetchShopSuccess(id))\r\n            }\r\n            // 发送网络请求\r\n            const endpoint = url.getShopById(id) // 得到URL\r\n            console.log(endpoint)\r\n            return dispatch(fetchShopById(endpoint, id)) // 发送异步actions\r\n        }\r\n    }\r\n}\r\n// 商品\r\nconst fetchProductDetail = (endpoint, id) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_PRODUCT_DETAIL_REQUEST,\r\n            types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n            types.FETCH_PRODUCT_DETAIL_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema: productSchema\r\n    },\r\n    id\r\n})\r\n\r\nconst fetchProductDetailSuccess = (id) => ({\r\n    type: types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n    id\r\n})\r\n// 店铺\r\nconst fetchShopById = (endpoint, id) =>  ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_SHOP_REQUEST,\r\n            types.FETCH_SHOP_SUCCESS,\r\n            types.FETCH_SHOP_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema: shopSchema\r\n    },\r\n    id\r\n})\r\nconst fetchShopSuccess = (id) => ({\r\n    type: types.FETCH_SHOP_SUCCESS,\r\n    id\r\n})\r\n\r\n\r\n\r\n// selectors\r\n\r\n// 获取商品详情\r\nexport const getProduct = (state, id) => {\r\n    return getProductDetailCache(state, id)\r\n}\r\n\r\n// 获取管理的店铺信息\r\nexport const getRelatedShop = (state, productId) => {\r\n    const product = getProductById(state, productId)\r\n    let shopId = product ? product.nearestShop : null\r\n    if (shopId) {\r\n        return getShopByIdCache(state, shopId)\r\n    }\r\n    return null\r\n}\r\n","import url from '../../../../utils/url'\r\nimport {FETCH_DATA} from \"../../../middleware/api\";\r\nimport {schema} from \"../../entities/products\";\r\n\r\nimport {combineReducers} from 'redux'\r\n\r\n// 请求参数使用到的常量对象\r\nexport const params = {\r\n    PATH_LIKES: 'likes',\r\n    PATH_DISCOUNTS: 'discounts',\r\n    PAGE_SIZE_LIKES: 5,\r\n    PAG_SIZE_DISCOUNTS: 3\r\n}\r\n\r\nexport const types = {\r\n    FETCH_LIKES_REQUEST: 'HOME/FETCH_LIKES_REQUEST', // 获取猜你喜欢请求\r\n    FETCH_LIKES_SUCCESS: 'HOME/FETCH_LIKES_SUCCESS', // 获取猜你喜欢请求成功\r\n    FETCH_LIKES_FAILURE: 'HOME/FETCH_LIKES_FAILURE', // 获取猜你喜欢请求失败\r\n\r\n    FETCH_DISCOUNTS_REQUEST: 'HOME/FETCH_DISCOUNTS_REQUEST', // 获取超值特惠请求\r\n    FETCH_DISCOUNTS_SUCCESS: 'HOME/FETCH_DISCOUNTS_SUCCESS', // 获取超值特惠请求成功\r\n    FETCH_DISCOUNTS_FAILURE: 'HOME/FETCH_DISCOUNTS_FAILURE', // 获取超值特惠请求失败\r\n}\r\n\r\nconst initialState = {\r\n    likes: {\r\n        isFetching: false,\r\n        pageCount: 0,\r\n        ids: []\r\n    },\r\n    discounts: {\r\n        isFetching: false,\r\n        ids: []\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    // 加载猜你喜欢的数据\r\n    loadLikes: () => {\r\n        return (dispatch, getState) => {\r\n            const {pageCount} = getState().ui.home.likes\r\n            const rowIndex = pageCount * params.PAGE_SIZE_LIKES\r\n            const endpoint = url.getProductList(params.PATH_LIKES, rowIndex, params.PAGE_SIZE_LIKES)\r\n            return dispatch(fetchLikes(endpoint))\r\n        }\r\n    },\r\n    // 加载特惠商品\r\n    loadDiscounts: () => {\r\n        return (dispatch, getState) => {\r\n\r\n            const {ids} = getState().ui.home.discounts\r\n            if (ids.length > 0) { // 不请求接口\r\n                return null\r\n            }\r\n            const endpoint = url.getProductList(params.PATH_DISCOUNTS, 0, params.PAG_SIZE_DISCOUNTS)\r\n            return dispatch(fetchDiscounts(endpoint))\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchLikes = endpoint => ({\r\n    [FETCH_DATA]: {\r\n       types: [\r\n           types.FETCH_LIKES_REQUEST,\r\n           types.FETCH_LIKES_SUCCESS,\r\n           types.FETCH_LIKES_FAILURE\r\n       ],\r\n        endpoint,\r\n        schema\r\n    }\r\n})\r\n\r\nconst fetchDiscounts = endpoint => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_DISCOUNTS_REQUEST,\r\n            types.FETCH_DISCOUNTS_SUCCESS,\r\n            types.FETCH_DISCOUNTS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    }\r\n});\r\n\r\n// 猜你喜欢的reducer\r\nconst likes = (state = initialState.likes, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_LIKES_REQUEST:\r\n            // 请求发出\r\n            return {...state, isFetching: true};\r\n        case types.FETCH_LIKES_SUCCESS:\r\n            // 请求成功\r\n            return {...state, isFetching: false, pageCount: state.pageCount+1, ids: state.ids.concat(action.res.ids)};\r\n        case types.FETCH_LIKES_FAILURE:\r\n            // 请求失败\r\n            return {...state, isFetching: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 特惠商品的reducer\r\nconst discounts = (state = initialState.discounts, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_DISCOUNTS_REQUEST:\r\n            // 请求发出\r\n            return {...state, isFetching: true};\r\n        case types.FETCH_DISCOUNTS_SUCCESS:\r\n            // 请求成功\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.res.ids)};\r\n        case types.FETCH_DISCOUNTS_FAILURE:\r\n            // 请求失败\r\n            return {...state, isFetching: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    discounts,\r\n    likes\r\n})\r\n\r\n\r\nexport default reducer\r\n\r\n\r\n// selectors\r\n\r\n// 猜你喜欢state\r\nexport const getLikes = state => {\r\n    return state.ui.home.likes.ids.map(id => {\r\n        return state.entities.products[id]\r\n    })\r\n}\r\n// 猜你喜欢当前页码\r\nexport const getPageCountOfLikes = state => {\r\n    return state.ui.home.likes.pageCount\r\n}\r\n\r\n// 超值特惠state\r\nexport const getDiscounts = state => {\r\n    return state.ui.home.discounts.ids.map(id => {\r\n        return state.entities.products[id]\r\n    })\r\n}\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport './index.css'\r\nclass ErrorToast extends  Component{\r\n    render() {\r\n        const {msg} = this.props\r\n        return (\r\n            <div className=\"errorToast\">\r\n                <div className=\"errorToast_text\">\r\n                    {msg}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => {\r\n            this.props.clearError()\r\n        }, 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer)\r\n        }\r\n    }\r\n}\r\nexport default ErrorToast\r\n","const initalState = {\r\n    error: null\r\n}\r\n\r\nexport const types = {\r\n    CLEAR_ERROR: 'APP/CLEAR_ERROR'\r\n}\r\n\r\n\r\n// action creators\r\nexport const action = {\r\n    clearError: () => ({\r\n        type: types.CLEAR_ERROR\r\n    })\r\n}\r\n\r\nconst reducer = (state = initalState, action) => {\r\n    const  {type, error} = action\r\n    if (type === types.CLEAR_ERROR) {\r\n        return {...state, error: null}\r\n    } else if(error) {\r\n        return {...state, error: error}\r\n    }\r\n    return state\r\n}\r\n\r\nexport default reducer\r\n\r\n\r\n// selectors\r\nexport const getError = (state) => {\r\n    return state.ui.app.error\r\n}\r\n","import React, {Component} from \"react\"\r\n\r\nexport default function asyncComponent(importComponent) {\r\n    class AsyncComponent extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                component: null\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then((mod) => {\r\n                this.setState({\r\n                    component: mod.default\r\n                })\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null\r\n        }\r\n    }\r\n\r\n    return AsyncComponent\r\n}\r\n\r\n\r\n","\r\nimport React, {Component} from 'react'\r\nimport './index.css'\r\n\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nimport {isLogin} from \"../../redux/modules/ui/login\";\r\n\r\nclass PriveateRoute extends  Component{\r\n    // 构造函数\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    // 挂载函数\r\n    componentWillMount() {\r\n    }\r\n    render() {\r\n        const {component: Component, login, ...rest} = this.props\r\n        return (\r\n                <Route\r\n                    {...rest}\r\n                    render={\r\n                    (props) => {\r\n                        return login ? (<Component {...props} />) : (\r\n                            // 跳转登录并保存当前页面\r\n                            <Redirect to={{\r\n                                pathname: '/login',\r\n                                state: {from: props.location}\r\n                            }}></Redirect>\r\n                        )\r\n                    }\r\n                }>\r\n\r\n                </Route>\r\n        )\r\n    }\r\n    // 页面加载完\r\n    componentDidMount() {\r\n    }\r\n    // 卸载函数\r\n    componentWillUnmount() {\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        login: isLogin(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PriveateRoute)\r\n// export default PriveateRoute\r\n","import React, {Component} from 'react'\r\nimport './index.css'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport ErrorToast from '../../components/ErrorToast'\r\nimport {action as appActions, getError} from \"../../redux/modules/ui/app\"\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\n\r\nimport AsyncComponent from \"../../utils/AsyncComponent\";\r\n\r\nimport PriveateRoute from '../PriveateRoute'\r\n\r\nconst Home = AsyncComponent(() => import(\"../Home\"));\r\nconst ProductDetail = AsyncComponent(() => import(\"../ProductDetail\"));\r\nconst Search = AsyncComponent(() => import(\"../Search\"));\r\nconst SearchResult = AsyncComponent(() => import(\"../SearchResult\"));\r\nconst Login = AsyncComponent(() => import(\"../Login\"));\r\nconst User = AsyncComponent(() => import(\"../User\"));\r\nconst Purchase = AsyncComponent(() => import(\"../Purchase\"));\r\n\r\n\r\n\r\n\r\n\r\nclass App extends  Component{\r\n    render() {\r\n        const {error, appActions: {clearError}} = this.props\r\n        return (\r\n            <div className='App'>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login} />\r\n\r\n                        <PriveateRoute path=\"/user\" component={User}></PriveateRoute>\r\n\r\n                        <Route path=\"/product/detail/:id\" component={ProductDetail}></Route>\r\n\r\n                        <Purchase path=\"/purchase/:id\" component={Purchase}></Purchase>\r\n\r\n                        <Route path=\"/search/result\" component={SearchResult}></Route>\r\n                        <Route path=\"/search\" component={Search} />\r\n                        <Route path=\"/\" component={Home}></Route>\r\n                    </Switch>\r\n                </Router>\r\n                { error ? <ErrorToast msg={error} clearError={clearError}></ErrorToast> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        error: getError(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {combineReducers} from 'redux'\r\n\r\nimport products from './products/index'\r\nimport shops from './shops/index'\r\nimport comments from './comments/index'\r\nimport orders from './orders/index'\r\nimport keywords from './keywords/index'\r\n\r\n// 合并领域状态\r\nconst rootEntitiesReducer = combineReducers({\r\n    products,\r\n    shops,\r\n    comments,\r\n    orders,\r\n    keywords\r\n})\r\nexport default rootEntitiesReducer\r\n","import {combineReducers} from 'redux'\r\nimport app from './app/index'\r\nimport detail from './productDetail/index'\r\nimport home from './home/index'\r\nimport search from './search/index'\r\nimport login from './login/index'\r\nimport user from './user/index'\r\nimport purchase from './purchase/index'\r\n// 合并领域状态\r\nconst rootUiReducer = combineReducers({\r\n    app,\r\n    detail,\r\n    home,\r\n    search,\r\n    login,\r\n    user,\r\n    purchase\r\n})\r\n\r\nexport default rootUiReducer\r\n","import {combineReducers} from 'redux'\r\n\r\nimport entities from './entities/index'\r\nimport ui from './ui/index'\r\n\r\n\r\n// 合并成根reducer\r\nconst rootReducer = combineReducers({\r\n    entities,\r\n    ui\r\n})\r\n\r\nexport default rootReducer\r\n","import {createStore, applyMiddleware} from 'redux' // 处理中间件要用applyMiddleware\r\nimport thunk from 'redux-thunk' // 处理异步(redux中间件)\r\nimport rootReducer from '../modules/index'\r\nimport api from '../middleware/api'\r\n\r\nlet store;\r\n\r\n// 测试环境 && redux-tools有安装\r\nif (process.env.NODE_ENV !== \"production\" && window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n    store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, api)))\r\n} else {\r\n    store = createStore(rootReducer, applyMiddleware(thunk, api)) // 将中间件传入\r\n}\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/index';\n\nimport {Provider} from 'react-redux'\nimport store from './redux/store/index'\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}